linux中一切皆文件

快捷键
	ctrl+alt+T	终端
	ctrl+L		清屏（终端）
	tab		补全（目录或者命令）（按两下可以显示所有目录或命令）

命令 「选项」 「参数」
一、查询目录中内容：ls 「选项」「文件或目录」
  选项：
	-a  显示所有文件，包括隐藏文件
	-l  显示详细信息
	-d  查看目录属性
	-h  人性化显示文件大小
	-i  显示inode

  权限：-rw-r--r--
        -文件类型（-文件 d目录 l软链接文件）
	rw- 		r-- 		r--
	u所有者		g所属组		o其他人
	r读  w写  x执行

二、文件处理命令：
1、建立文件：touch 「文件名」
2、打开文件：cat 「文件名/路径」
三、目录处理命令：
1、建立目录：mkdir -p 「目录名」
	-p  递归创建
	命令英文原意：make directories
2、切换所在目录：cd 「目录」
	命令英文原意：change directory
  简化操作：
    cd ~	进入当前用户的家目录
    cd 
    cd -	进入上次目录
    cd ..	进入上一级目录
    cd .	进入当前目录
  相对路径：参照当前所在目录，进行查找。如：[root@imooc ~]# cd .. /usr/local/src/
  绝对路径： 从根目录开始指定，一级一级递归查找。在任何目录下，都能进入指定位置。如：[root@immoc ~]# cd /etc/
3、查询所在目录位置：pwd
	命令英文原意：print working directory
4、删除空目录：rmdir 「目录名」
	命令英文原意：remove empty directories
5、删除文件或目录：rm -rf 「文件或目录」
	命令英文原意：remove
	-r	删除目录
	-f	强制
6、复制命令：cp 「选项」 「源文件或目录」 「目标目录」
	命令英文原意：copy
  选项：
	-r	复制目录
	-p	连带文件属性复制
	-d	若源文件事链接文件，则复制链接属性
	-a	相当于 -pdr
7、剪切或改名命令：mv 「原文件或目录（目录前不加“/”）」 「目标目录」
	命令英文原意：move

常用目录的作用：
	/根目录
	/bin命令保存目录（普通目录就可以读取的命令）
	/boot启动目录，启动相关文件
	/dev设备文件保存目录
	/etc配置文件保存目录
	/home普通用户的家目录
	/lib系统库保存目录
	/mnt系统挂载目录
	/media挂载目录

四、链接命令：
1、链接命令：ln -s 「原文件」 「目标文件」
	命令英文原意：link
	功能描述：生成链接文件
  选项：
	-s	创建软链接

	硬链接特征：
		1、拥有相同的i节点和存储block块，可以看做事同一个文件
		2、可以通过i节点识别
		3、不能跨分区
		4、不能针对目录使用
	软链接特征：
		1、类似Windows快捷方式
		2、软链接拥有自己的i节点和block块，但是数据中只保存源文件的文件名和i节点号，并没有实际的文件数据
		3、lrwxrwxrwx  l软链接
			软链接文件权限都为rwxrwxrwx
		4、修改任意文件，另一个都改变
		5、删除原文件，软链接不能使用
五、文件搜索命令：
1、文件搜索命令：locate 「文件名」
		 #在后台数据库中按文件名搜索，搜索速度更快；只可以搜索文件名
		/var/lib/mlocate  locate命令所搜索的后台数据库（一天一更新）
		updatedb  更新数据库
2、命令搜索命令：whereis/which 「命令名」
		 #搜索命令所在路径及帮助文档所在位置
  选项：
	-b	只查找可执行文件
	-m	只查找帮助文件
	PATH环境变量：定义的是系统搜索命令的路径	[root@localhost ~]# echo $PATH
3、文件搜索命令：find 「搜索范围」 「搜索条件」
		 #搜索文件
		find / -name install.log
		 #避免大范围搜索，会非常耗费系统资源
		 #find是在系统当中搜索符合条件的文件名。如果需要匹配，使用通配符匹配，通配符是完全匹配
		·find /root -iname install.log
		 #不区分大小写
		·find /root -user root
		 #按照所有者搜索
		·find /root -nouser
		 #查找没有所有者的文件
		·find /var/log/ -mtime +10
		 #查找十天前修改的文件
		  -10	10天内修改的文件
		  10	10天当天修改的文件
		  +10	10天前修改的文件
		  atime	文件访问时间
		  ctime	改变文件属性
		  mtime	修改文件内容
		·find . -size 25k
		 #查找文件大小是25KB的文件
		  -25k	小于25KB的文件
		  25k	等于25KB的文件
		  +25k	大于25KB的文件
		·find . -inum 262422
		 #查找i节点是262422的文件
		·find /etc -size +20k -a -size -50k
		 #查找/etc目录下，大于20KB并且小于50KB的文件
		  -a	and	逻辑与
		  -o	or	逻辑或
		·find /etc -size +20k -a -size -50k -exec ls -lh {} \;
		 #查找/etc目录下，大于20KB并且小于50KB的文件，并显示详细信息
		 #-exec/-ok 命令 {} \; 对搜索结果执行操作

	linux中的通配符：
		*  匹配任意内容
		？ 匹配任意一个字符
		[] 匹配任意一个中括号内的字符
4、搜索字符串命令：grep 「选项」 字符串 文件名
		  #在文件中匹配符合条件的字符串
  选项：
	-i	忽略大小写
	-v	排除指定字符串

  find命令与grep命令的区别：
	·find命令：在系统中搜索符合条件的文件名，如果需要匹配，使用通配符匹配，通配符是完全匹配。
	·grep命令：在文件当中搜索符合条件的字符，如果需要匹配，使用正则表达式进行匹配，正则表达式时包含匹配

六、帮助命令：
1、帮助命令：man 命令
 	    #获取指定命令的帮助
  查看命令拥有哪个级别的帮助
	·man -f 命令   相当于	·whatis 命令
  举例
	·man -5 passwd	·man -4 null	·man -8 ifconfig
  查看和命令相关的所有帮助
	·man -k 命令   相当于	·apropos 命令
  例如
	·apropos passwd
2、选项帮助：命令 --help
	    #获取命令选项的帮助
  shell内部命令帮助
	·help shell内部命令
	 #获取shell内部命令的帮助
  例如
	·whereis cd
	 #确定是否是shell内部命令
	·help cd
	 #获取内部命令帮助
3、详细命令帮助：info 命令
	- 回车	进入子帮助页面（带有*号标记）
	- u	进入上层页面
	- n	进入下一个帮助小节
	- p	进入上一个帮助小节
	- q	退出
七、压缩与解压缩命令：
  常用压缩格式	.zip	.gz	.bz2	.tar.gz	 .tar.bz2
1、.zip格式压缩
	·zip 压缩文件名 源文件
	 #压缩文件
	·zip -r 压缩文件名 源目录
	 #压缩目录
	·unzip 压缩文件
	 #解压缩.zip文件
2、gz格式压缩：
	·gzip 源文件
	 #压缩为.gz格式的压缩文件，源文件会消失
	·gzip -c 源文件 > 压缩文件
	 #压缩为.gz格式，源文件保留 例如：gzip -c 123 >123.gz
	·gzip -r 目录
	 #压缩目录下所有的子文件，但是不能压缩目录
	·gzip -d 压缩文件
	 #解压缩文件
	·gunzip 压缩文件
	 #解压缩文件
3、.bz2格式压缩
	·bzip2 源文件
	 #压缩为.bz2格式，不保留源文件
	·bzip2 -k 源文件
	 #压缩后保留源文件
	·注意：bzip2命令不能压缩目录
	·bzip2 -d 压缩文件
	 #解压缩，-k保留压缩文件
	·bunzip2 压缩文件
	 #解压缩，-k保留压缩文件
4、打包命令（打包后可以进行.gz/.ba2格式的压缩）
	·tar -cvf 打包文件名 源文件
  选项：
	-c	打包
	-v	显示过程
	-f	指定打包后的文件名
  例如：tar -cvf abc.tar abc
	·tar -xvf 打包文件名
  选项：
	-x	解打包
5、.tar.gz压缩格式（其实.tar.gz格式是先打包为.tar格式，再压缩为.gz格式）
	·tar -zcvf 压缩包名.tar.gz 源文件
  选项：
	-z	压缩为.tar.gz格式
	·tar -zcvf /绝对路径/压缩包名.tar.gz 文件名
	 #指定位置压缩

	·tar -zxvf 压缩包名.tar.gz
  选项：
	-x	解压缩.tar.gz格式
	·tar -zxvf 压缩包名.tar.gz -C 目录名
	 #指定位置解压缩

	·tar -ztvf 压缩包名.tar.gz
  选项：
	-t	查看压缩包内容
6、.tar.bz2压缩格式（与.tar.gz同理）
	·tar -jcvf 压缩包名.tar.bz2 源文件
  选项：
	-j	压缩为.tar.bz2格式
	·tar -jxvf 压缩包名.tar.bz2 -C 目录名
	 #指定位置解压缩

	·tar -jxvf 压缩包名.tar.bz2
  选项：
	-x	解压缩.tar.bz2格式
	·tar -zxvf 压缩包名.tar.gz -C 目录名
	 #指定位置解压缩

	·tar -jtvf 压缩包名.tar.bz2
  选项：
	-t	查看压缩包内容
八、开机和重启命令（root权限下）：
1、shutdown命令（最安全）：shutdown 「选项」 「时间」
  选项：
	-c	取消前一个关机命令
	-h	关机
	-r	重启
2、其他关机命令（不太安全）：
	·halt
	·poweroff
	·init 0
3、其他重启命令(不太安全）：
	·reboot
	·init 6
4、系统运行级别：
	0	关机
	1	单用户（类似windows安全模式，无图形界面）
	2	不完全多用户（字符界面），不含NFS服务
	3	完全多用户（完全字符界面）
	4	未分配
	5	图形界面
	6	重启
	init	调用级别
	·runlevel	查询系统当前级别
5、退出登录命令：logout
九、其他常用命令：
1、查询与自动挂载：
	·[root@localhost ~]# mount
	 #查询系统中已经挂载的设备
	·[root@localhost ~]# mount -a
	 #依据配置文件/etc/fstab的内容，自动挂载
2、挂载命令格式：
	·[root@localhost ~]# mount [-t 文件系统] [-o 特殊选项] 设备文件名 挂载点
  选项：
	-t文件系统	加入文件系统类型来指定挂载的类型，可以ext3、ext4、iso9660等文件
	-o特殊选项	可以指定挂载的额外选项
3、挂载光盘：
	·[root@localbost ~]# mkdir /mnt/cdrom/
	 #建立挂载点
	·[root@localbost ~]# mount -t iso9660 /dev/cdrom /mnt/cdrom/
	 #挂载光盘
	·[root@localhost ~]# mount /dev/sr0 /mnt/cdrom/
4、卸载命令
	·[root@localhost ~]# umount 设备文件名或挂载点
	·[root@localhost ~]# umount /mnt/cdrom
5、挂载U盘：
	·[root@localhost ~]#fdisk -l
	 #查看U盘设备文件
	·[root@localhost ~]# mount -t vfat /dev/sdb1 /mnt/usb
    注意：Linux默认事不支持NTFS文件系统的
6、查看登录用户信息：
	·w 用户名
  命令输出：
	·USER	登录的用户名
	-TTY	登录终端
	-FROM	从那个IP地址登录
	-LOGIN@	登录时间
	-IDLE	用户闲置时间
	-JCPU	指的是和该终端连接的所有进程占用时间。这个时间里并不包括过去的后台作业时间爱呢，但却包括当前正在运行的后台作业所占用时间
	-PCPU	指当前进程所占用的时间
	-WHAT	当前正在运行的命令

	·who	用户名
  命令输出：
	-用户名
	-登录终端
	-登录时间（登录来源IP地址）
7、查询当前登录和过去登录的用户信息
	·last
	 #last命令默认是读取var/log/wtmp文件数据
  命令输出
	-用户名
	-登录终端
	-登录IP
	-登录时间
	退出时间（在线时间）
8、查看所有用户的最后一次登录时间
	·lastlog
	 #lastlog命令默认是读取/var/log/lastlog文件内容
  命令输出：
	-用户名
	-登录终端
	-登录IP
	-最后一次登录时间




*g++常用命令选项（来自菜鸟教程）
	-ansi	只支持ANCI标准的C语法。这一选项将禁止GNU C的某些特色。例如asm或typeof关键词。
	-c	只编译并生成目标文件
	-DMACRO	以字符串“1”定义MACRO宏。
	-DMACRO=DEFN	以字符串“DEFN”定义MACRO宏。
	-E	只运行C预编译。
	-g	生成调试信息，GNU调试器可利用该信息。
	-IDIRECTORY	指定额外的头文件搜索路径DIRECTORY
	-LDIRECTORY	指定额外的函数库搜索路径DIRECTORY
	-ILIBRARY	连接时搜索指定的函数库LIBRARY
	-m486	针对486进行代码优化
	-o	FILE生成指定的输出文件。用在生成可执行文件时
	-O0	不进行优化处理
	-O	或-O1优化生成代码
	-O2	进一步优化
	-O3	比-O2更进一步优化，包括inline函数
	-shared	生成目标文件。通常用在建立共享库时
	-static	禁止使用共享链接
	-UMACRO	取消对MACRO宏的定义
	-w	不胜成任何警告内容
	-Wall	生成所有警告命令
